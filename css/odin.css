@charset 'UTF-8';
/*!
 * Odin - Un framework Sass hecho por: @mpalau
 * Basado en los principios BEM y SMACSS.
 * Version 1.0
 * Copyright 2015
 *
 * NOTA: Usa Autoprefixer ðŸ˜œ
 */
/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
/*! sass-bem-constructor - version : 1.0.0 - 2016-02-07 */
/*!
Animate.css - http://daneden.me/animate
Licensed under the MIT license - http://opensource.org/licenses/MIT
Copyright (c) 2015 Daniel Eden
*/
@import url('http://fonts.googleapis.com/css?family=Raleway:100,300,400,700');
body
{
    -webkit-backface-visibility: hidden;
}

.animated
{
    -webkit-animation-duration: 1s;
            animation-duration: 1s;

    -webkit-animation-fill-mode: both;
            animation-fill-mode: both;
}
.animated.infinite
{
    -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
}
.animated.hinge
{
    -webkit-animation-duration: 2s;
            animation-duration: 2s;
}
.animated.bounceIn,
.animated.bounceOut
{
    -webkit-animation-duration: .75s;
            animation-duration: .75s;
}
.animated.flipOutX,
.animated.flipOutY
{
    -webkit-animation-duration: .75s;
            animation-duration: .75s;
}

@-webkit-keyframes tada
{
    0%
    {
        -webkit-transform: scale(1);
    }
    10%,
    20%
    {
        -webkit-transform: scale(.9) rotate(-3deg);
    }
    30%,
    50%,
    70%,
    90%
    {
        -webkit-transform: scale(1.1) rotate(3deg);
    }
    40%,
    60%,
    80%
    {
        -webkit-transform: scale(1.1) rotate(-3deg);
    }
    100%
    {
        -webkit-transform: scale(1) rotate(0);
    }
}

@keyframes tada
{
    0%
    {
        -webkit-transform: scale(1);
                transform: scale(1);
    }
    10%,
    20%
    {
        -webkit-transform: scale(.9) rotate(-3deg);
                transform: scale(.9) rotate(-3deg);
    }
    30%,
    50%,
    70%,
    90%
    {
        -webkit-transform: scale(1.1) rotate(3deg);
                transform: scale(1.1) rotate(3deg);
    }
    40%,
    60%,
    80%
    {
        -webkit-transform: scale(1.1) rotate(-3deg);
                transform: scale(1.1) rotate(-3deg);
    }
    100%
    {
        -webkit-transform: scale(1) rotate(0);
                transform: scale(1) rotate(0);
    }
}

.tada
{
    -webkit-animation-name: tada;
            animation-name: tada;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video
{
    font: inherit;
    font-size: 100%;

    margin: 0;
    padding: 0;

    vertical-align: baseline; 

    border: 0;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section
{
    display: block;
}

body
{
    line-height: 1;
}

ol,
ul
{
    list-style: none;
}

blockquote,
q
{
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after
{
    content: '';
    content: none;
}

table
{
    border-spacing: 0; 
    border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6
{
    font-family: 'Raleway', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: 700;
}

*,
*::before,
*::before
{
    box-sizing: border-box;
}

::-moz-selection
{
    color: #fff; 
    background: #f1955c;
}

::selection
{
    color: #fff; 
    background: #f1955c;
}

img
{
    max-width: 100%;
}

.is-hidden
{
    position: absolute;

    visibility: hidden; 

    width: 0;
    height: 0;
}

.icon
{
    display: block;

    width: 100%;
    margin: 0 auto; 

    fill: currentColor;
    stroke: currentColor;
}

body
{
    font-family: 'Raleway', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: 16px;
    font-weight: 400;
    line-height: 1.65; 

    color: #4a4a4a;
}

h1
{
    font-size: 4.21399em;
    line-height: 1.2;
}

h2
{
    font-size: 3.16049em;
    line-height: 1.3;
}

h3
{
    font-size: 2.37037em;
}

h4
{
    font-size: 1.77778em;
}

h5
{
    font-size: 1.33333em;
}

h6
{
    font-size: 1em;
}

label
{
    display: none;
}

.container
{
    position: relative;

    width: 100%;
    max-width: 960px;
    margin: 0 auto;
    padding: 0 10px; 

    *zoom: 1;
}
.container:before,
.container:after
{
    display: table; 

    content: '';
}
.container:after
{
    clear: both;
}
@media (min-width: 48em)
{
    .container
    {
        width: 85%;
    }
}

.row
{
    *zoom: 1;
}
.row:before,
.row:after
{
    display: table; 

    content: '';
}
.row:after
{
    clear: both;
}

.row--flex
{
    display: -webkit-flex;
    display: -ms-flexbox;
    display:         flex;
            flex-direction: column;

    max-width: 100%; 

    text-align: center;

    -webkit-flex-direction: column;
        -ms-flex-direction: column;
    -webkit-flex-wrap: wrap;
        -ms-flex-wrap: wrap;
            flex-wrap: wrap;
    -webkit-align-items: center;
    -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
            justify-content: center;
}
@media (min-width: 48em)
{
    .row--flex
    {
                flex-direction: row;

        -webkit-flex-direction: row;
            -ms-flex-direction: row;
        -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
                justify-content: space-around;
    }
}

.vertical
{
            flex-direction: column; 

    -webkit-flex-direction: column;
        -ms-flex-direction: column;
}

.horizontal
{
            flex-direction: row; 

    -webkit-flex-direction: row;
        -ms-flex-direction: row;
}

.sample
{
    padding: 20px 0;
}
.sample code
{
    margin: .625em 0; 
    padding: .3125em 1.875em;

    background: #d6d7d9;
}
.sample .half
{
    max-width: 100%; 

    -webkit-align-self: flex-start;
    -ms-flex-item-align: start;
            align-self: flex-start;
    -webkit-flex-basis: 100%;
    -ms-flex-preferred-size: 100%;
            flex-basis: 100%;
}
@media (min-width: 48em)
{
    .sample .half
    {
        max-width: 50%;
        padding: .5em; 

        -webkit-flex-basis: 50%;
        -ms-flex-preferred-size: 50%;
                flex-basis: 50%;
    }
}
@media (min-width: 90em)
{
    .sample .half
    {
        -webkit-align-self: center;
        -ms-flex-item-align: center;
                align-self: center;
    }
}
.sample h1
{
    font-size: 3.21399em;
}
@media (min-width: 48em)
{
    .sample h1
    {
        font-size: 4.21399em;
    }
}
.sample h4
{
    font-size: 1.77778em; 

    margin-bottom: .9375em;
}
.sample img
{
    margin-top: .9375em;

    border: 8px solid white;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, .5);
}
@media (min-width: 48em)
{
    .sample img
    {
        max-width: 440px; 
        margin: 0;
    }
}
.sample .odin
{
    position: relative; 

    width: 9.375em;
    height: 5.625em;

    transition: .3s;

    fill: #4a90e2;
    stroke: white;
}
.sample .odin:hover
{
    -webkit-transform: rotate(-25deg) translate3d(0, 30%, 0);
            transform: rotate(-25deg) translate3d(0, 30%, 0); 

    fill: #ec7024;
    stroke-width: 3;
}
.sample .btn
{
    font-family: 'Raleway', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-size: .625em;
    font-weight: bold;
    line-height: 1.5;

    position: relative;

    margin-top: 1.5625em;
    padding: 1em 2em;

    transition: .2s ease-in-out;
    text-decoration: none; 
    letter-spacing: .15625em;
    text-transform: uppercase;

    color: white;
    border-style: none;
    border-radius: 40px;
    outline: none;
    background: #ec7024;
}
.sample .btn:hover
{
    color: white; 
    background: #d55c12;
}
.sample .btn:active
{
    box-shadow: none;
}
.sample .btn:visited
{
    color: white;
}
.sample .custom-font
{
    font-family: 'Falco-Black', sans-serif;
    font-size: 1.5em;
    font-weight: initial;

    margin-top: 1.875em;

    color: #4a90e2;
}
.sample .smart-link
{
    text-decoration: none;

    color: #4a4a4a;
    background-image: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff), linear-gradient(#4a4a4a, #4a4a4a);
    background-repeat: no-repeat, no-repeat, repeat-x;
    background-position: 0 90%, 100% 90%, 0 90%; 
    background-size: .05em 1px, .05em 1px, 1px 1px;
    text-shadow: .03em 0 #fff, -.03em 0 #fff, 0 .03em #fff, 0 -.03em #fff, .06em 0 #fff, -.06em 0 #fff, .09em 0 #fff, -.09em 0 #fff, .12em 0 #fff, -.12em 0 #fff, .15em 0 #fff, -.15em 0 #fff;
}
.sample .smart-link::-moz-selection
{
    background: #ec7024; 
    text-shadow: .03em 0 #ec7024, -.03em 0 #ec7024, 0 .03em #ec7024, 0 -.03em #ec7024, .06em 0 #ec7024, -.06em 0 #ec7024, .09em 0 #ec7024, -.09em 0 #ec7024, .12em 0 #ec7024, -.12em 0 #ec7024, .15em 0 #ec7024, -.15em 0 #ec7024;
}
.sample .smart-link::selection
{
    background: #ec7024; 
    text-shadow: .03em 0 #ec7024, -.03em 0 #ec7024, 0 .03em #ec7024, 0 -.03em #ec7024, .06em 0 #ec7024, -.06em 0 #ec7024, .09em 0 #ec7024, -.09em 0 #ec7024, .12em 0 #ec7024, -.12em 0 #ec7024, .15em 0 #ec7024, -.15em 0 #ec7024;
}
.sample .smart-link:before,
.sample .smart-link:after,
.sample .smart-link *,
.sample .smart-link *:before,
.sample .smart-link *:after
{
    text-shadow: none;
}
.sample .smart-link:visited
{
    color: #4a4a4a;
}
.sample .odin-footer
{
    width: 3.125em;
    height: 3.125em;
    margin-top: 1.5625em;

    transition: 1s; 

    fill: #4d4d4d;
}
.sample .odin-footer:hover
{
    -webkit-animation: rebote 1.5s infinite;
            animation: rebote 1.5s infinite;
}

@-webkit-keyframes rebote
{
    50%
    {
        -webkit-transform: scale(3) translateY(25%) rotate(15deg);
                transform: scale(3) translateY(25%) rotate(15deg);

        fill: #2ba5e0;
    }
    80%
    {
        -webkit-transform: rotate(390deg);
                transform: rotate(390deg);

        fill: #ec7024;
    }
}

@keyframes rebote
{
    50%
    {
        -webkit-transform: scale(3) translateY(25%) rotate(15deg);
                transform: scale(3) translateY(25%) rotate(15deg);

        fill: #2ba5e0;
    }
    80%
    {
        -webkit-transform: rotate(390deg);
                transform: rotate(390deg);

        fill: #ec7024;
    }
}
